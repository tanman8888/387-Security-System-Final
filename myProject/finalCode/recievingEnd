//RF was found from Ian Baker's wiki. Thanks Ian for letting me use your RF link. You saved me man.
#include <VirtualWire.h> //for RF communication
#include <LiquidCrystal.h>

LiquidCrystal lcd(12,11,10,9,6,5);    //Declares the pins that the LCD will use

const int buzzerPin = 3;

//Iniitializes message which will store data recieved from trasmitter
byte message[VW_MAX_MESSAGE_LEN];
//messageLength is to assist in recieving data
byte messageLength = VW_MAX_MESSAGE_LEN;

const int ledPin = 8; //an LED is used to confirm that a signal has been recieved
const int recPin = 7; //data line from RF reciever

void setup()
{
  Serial.begin(9600);
  pinMode(buzzerPin, OUTPUT);
  //RF Reciever setup, from virtualwire library
  vw_set_ptt_inverted(true);
  vw_setup(2000);
  vw_set_rx_pin(recPin);
  vw_rx_start();
  
  pinMode(ledPin, OUTPUT);    //Sets the ledPin as an output
  lcd.begin(16, 2);     //initializeds the LCD
   
   lcd.clear();   //You have to clear the LCD screan if you want to write over something
   lcd.write("Noone's at"); //Write to the LCD
   lcd.setCursor(0,1);    //It can only hold 16 characters long, so move to the second line
   lcd.write("the door");   //Finish message
 
}


void loop() {
 
  if (vw_get_message(message, &messageLength)) //the function "vw_get_message()" verifies a message has been recieved
                                               // and stores the message in a variable (from virtualwire library)
  { 
    for (int i = 0; i < messageLength; i++)//printing data recieved from RF transission
    {
      Serial.print(message[i]); //print the message
      Serial.print(" ");
      
      if(message[i] == 2) {   //Someone is trying the touch pass code
        touchLCD();           //Call my method for touch entry, which writes to the LCD and buzzes the piezo
      }
      if(message[i] == 3) {   //Someone is knocking
        knockLCD();           //Call my method for knock entry, which writes to the LCD and buzzes the piezo
      }
        if(message[i] == 4) { //If someone successfully opens the door
        blink();              //blink to indicate that it received a message. I had this in the methods for the other messages
        openLCD();            //Call my method for successful entry, which writes to the LCD and buzzes the piezo
      }
      if(message[i] == 5) {   //If there is a break in!!
        breakInLCD();         //Call my method for break in, which writes to the LCD and buzzes the piezo!
      }
          if(message[i] == 6) {   //If the system is reset      
          noTone(buzzerPin);      //Stop any buzzing that may still be going off. That is if the duration isn't through, but the system gets reset
          lcd.clear();            //You have to clear the LCD screan if you want to write over something
          lcd.print("All good");  //Print to the LCD that it's all good now
      }
    }
    Serial.println("Found"); //"Found" prints if a message was recieved
  }
  Serial.println("Loop\n"); //"Loop" prints after a cycle of void loop() is completed
  delay(500);
}

void touchLCD() {
        lcd.clear();  //You have to clear the LCD screan if you want to write over something
        blink();      //Blink to indicate that data was received
        lcd.print("Someone's trying");   //Write to the LCD that someones touching the door
        lcd.setCursor(0,1);             //It can only hold 16 characters long, so move to the second line
        lcd.print("the touch entry");   //Finish the message
        tone(buzzerPin,20,500);         //Buzz to get owners attention
}

void knockLCD() {
        lcd.clear();  //You have to clear the LCD screan if you want to write over something
        blink();       //Blink to indicate that data was received
        lcd.print("Someone's ");     //Write to the LCD that someones knocking
        lcd.setCursor(0,1);     //It can only hold 16 characters long, so move to the second line
        lcd.write("knocking");    //Finish message
        tone(buzzerPin,200,700);    //Buzz speaker to get the users attention
}

void openLCD() {
        lcd.clear();    //You have to clear the LCD screan if you want to write over something
        lcd.print("Someone's opened");  //Write to the LCD that someones entering successfully
        lcd.setCursor(0,1);        //It can only hold 16 characters long, so move to the second line
        lcd.print("the door");      //Finish message
        tone(buzzerPin,200,50);     //Buzz speaker to get the users attention
}

void breakInLCD(){
        blink();    //Blink LED to display that a data is received
        lcd.clear();    //You have to clear the LCD screan if you want to write over something
        lcd.print("BREAK IN");  //Write to the LCD that someones breaking in
        lcd.setCursor(0,1);     
        tone(buzzerPin,255,1000); //Buzz speaker to get the users attention
}
//blink(): a blink method
void blink()
{
  digitalWrite(ledPin, HIGH);
  delay(500);
  digitalWrite(ledPin, LOW);
  delay(500);
}
